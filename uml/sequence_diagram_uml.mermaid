sequenceDiagram
    participant Client as 클라이언트
    participant Filter as TokenRateLimitFilter
    participant Service as TokenRateLimitService
    participant Redis as Redis Cache
    participant Proxy as ModelProxyService
    participant Registry as ModelRegistryService
    participant vLLM as vLLM Server
    participant Metrics as TokenUsageMetrics
    
    Note over Client,Metrics: 토큰 사용량 제한 플로우
    
    Client->>+Filter: POST /api/v1/models/{modelId}/chat/completions
    Note right of Filter: 요청 필터링 시작
    
    Filter->>Filter: extractModelId(path)
    Filter->>Filter: extractUserId(headers)
    Filter->>Filter: extractRequestedTokens(body)
    
    Filter->>+Service: checkTokenLimit(modelId, userId, tokens)
    Note right of Service: 토큰 제한 확인
    
    Service->>+Redis: GET concurrent:{modelId}:{userId}
    Redis-->>-Service: current count
    
    Service->>Service: checkConcurrentRequests()
    
    Service->>+Redis: GET token:usage:{modelId}:{userId}:minute
    Redis-->>-Service: minute usage
    
    Service->>+Redis: GET token:usage:{modelId}:{userId}:hour  
    Redis-->>-Service: hour usage
    
    Service->>+Redis: GET token:usage:{modelId}:{userId}:day
    Redis-->>-Service: day usage
    
    alt 제한 초과
        Service-->>Filter: false (limit exceeded)
        Filter-->>Client: 429 Too Many Requests
    else 제한 통과
        Service->>+Redis: INCR concurrent:{modelId}:{userId}
        Redis-->>-Service: updated count
        Service-->>-Filter: true (allowed)
        
        Filter->>+Proxy: proxyToModel(request)
        Note right of Proxy: 모델 프록시 처리
        
        Proxy->>+Registry: getModelEndpoint(modelId)
        Registry->>+Redis: GET model:endpoint:{modelId}
        Redis-->>-Registry: endpoint URL
        Registry-->>-Proxy: endpoint
        
        Proxy->>+vLLM: POST /v1/chat/completions
        Note right of vLLM: vLLM 서버 처리
        vLLM-->>-Proxy: response with usage
        
        Proxy->>Proxy: extractTokenUsageFromResponse()
        
        Proxy->>+Service: recordTokenUsage(modelId, userId, actualTokens, requestId)
        Note right of Service: 실제 토큰 사용량 기록
        
        Service->>+Redis: INCRBY token:usage:{modelId}:{userId}:minute actualTokens
        Redis-->>-Service: updated minute usage
        
        Service->>+Redis: INCRBY token:usage:{modelId}:{userId}:hour actualTokens
        Redis-->>-Service: updated hour usage
        
        Service->>+Redis: INCRBY token:usage:{modelId}:{userId}:day actualTokens
        Redis-->>-Service: updated day usage
        
        Service->>+Redis: DECR concurrent:{modelId}:{userId}
        Redis-->>-Service: updated concurrent count
        
        Service->>+Metrics: recordTokenUsage(modelId, userId, actualTokens)
        Metrics-->>-Service: recorded
        
        Service-->>-Proxy: recording complete
        
        Proxy-->>-Filter: model response
        Filter-->>-Client: 200 OK with response
    end
    
    Note over Client,Metrics: 플로우 완료