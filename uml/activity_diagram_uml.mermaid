flowchart TD
    Start([🚀 클라이언트 요청 시작]) --> ValidateRequest{📋 요청 유효성 검사}
    
    ValidateRequest -->|유효하지 않음| InvalidRequest[❌ 400 Bad Request 반환]
    InvalidRequest --> End([🏁 종료])
    
    ValidateRequest -->|유효함| ExtractInfo[📝 요청 정보 추출<br/>• ModelId<br/>• UserId<br/>• Estimated Tokens]
    
    ExtractInfo --> CheckConcurrent{🔄 동시 요청 수<br/>확인}
    
    CheckConcurrent -->|초과| ConcurrentLimitExceeded[🚫 동시 요청 제한 초과<br/>429 응답]
    ConcurrentLimitExceeded --> LogRateLimit[📊 Rate Limit 메트릭 기록]
    LogRateLimit --> End
    
    CheckConcurrent -->|통과| IncrementConcurrent[⬆️ 동시 요청 카운트 증가]
    
    IncrementConcurrent --> CheckMinuteLimit{⏱️ 분당 토큰<br/>제한 확인}
    
    CheckMinuteLimit -->|초과| MinuteLimitExceeded[🚫 분당 제한 초과<br/>429 응답]
    MinuteLimitExceeded --> DecrementConcurrent[⬇️ 동시 요청 카운트 감소]
    DecrementConcurrent --> LogRateLimit
    
    CheckMinuteLimit -->|통과| CheckHourLimit{⏰ 시간당 토큰<br/>제한 확인}
    
    CheckHourLimit -->|초과| HourLimitExceeded[🚫 시간당 제한 초과<br/>429 응답]
    HourLimitExceeded --> DecrementConcurrent
    
    CheckHourLimit -->|통과| CheckDayLimit{📅 일당 토큰<br/>제한 확인}
    
    CheckDayLimit -->|초과| DayLimitExceeded[🚫 일당 제한 초과<br/>429 응답]
    DayLimitExceeded --> DecrementConcurrent
    
    CheckDayLimit -->|통과| GetModelEndpoint[🔍 모델 엔드포인트 조회]
    
    GetModelEndpoint --> ModelFound{🤖 모델 서버<br/>존재 확인}
    
    ModelFound -->|없음| ModelNotFound[❌ 404 Model Not Found]
    ModelNotFound --> DecrementConcurrent
    
    ModelFound -->|존재| CheckModelHealth{💚 모델 서버<br/>상태 확인}
    
    CheckModelHealth -->|불량| ModelUnavailable[🔴 503 Service Unavailable]
    ModelUnavailable --> DecrementConcurrent
    
    CheckModelHealth -->|정상| ForwardRequest[📤 vLLM 서버로<br/>요청 전달]
    
    ForwardRequest --> ProcessingByModel[🤖 vLLM에서<br/>요청 처리]
    
    ProcessingByModel --> ModelResponse{📥 모델 응답<br/>수신}
    
    ModelResponse -->|오류| ModelError[❌ 모델 처리 오류<br/>5xx 응답]
    ModelError --> DecrementConcurrent
    
    ModelResponse -->|성공| ExtractActualTokens[📊 실제 토큰 사용량<br/>추출]
    
    ExtractActualTokens --> UpdateTokenUsage[💾 토큰 사용량 업데이트<br/>• 분당 사용량<br/>• 시간당 사용량<br/>• 일당 사용량]
    
    UpdateTokenUsage --> RecordMetrics[📈 메트릭 기록<br/>• Prometheus 메트릭<br/>• 사용량 통계]
    
    RecordMetrics --> DecrementConcurrentSuccess[⬇️ 동시 요청 카운트 감소]
    
    DecrementConcurrentSuccess --> LogSuccessfulRequest[📝 성공 요청 로그 기록]
    
    LogSuccessfulRequest --> ReturnResponse[✅ 200 OK<br/>모델 응답 반환]
    
    ReturnResponse --> End
    
    %% 백그라운드 작업들
    subgraph "Background Tasks"
        ScheduledCleanup[🧹 스케줄된 정리 작업<br/>• 만료된 키 삭제<br/>• 통계 수집]
        HealthCheck[💊 헬스체크<br/>• Redis 연결 확인<br/>• 모델 서버 상태]
        MetricCollection[📊 메트릭 수집<br/>• 시간당 통계<br/>• 일일 통계]
    end
    
    %% 오류 처리 서브플로우
    subgraph "Error Handling"
        RedisError{💥 Redis 연결<br/>오류 발생?}
        FallbackMode[🔄 Fallback 모드<br/>• 임시 메모리 캐시<br/>• 기본 제한값 적용]
        CircuitBreaker[⚡ Circuit Breaker<br/>• 모델 서버 차단<br/>• 대체 모델 사용]
    end
    
    %% 모니터링 플로우
    subgraph "Monitoring Flow"
        PrometheusScrape[📊 Prometheus 스크래핑]
        AlertEvaluation[🚨 알람 평가<br/>• Rate Limit 임계값<br/>• 오류율 확인]
        NotificationSend[📧 알림 발송<br/>• Slack/Email<br/>• PagerDuty]
    end
    
    %% 연결 관계 (백그라운드 작업)
    ScheduledCleanup -.-> UpdateTokenUsage
    HealthCheck -.-> CheckModelHealth
    MetricCollection -.-> RecordMetrics
    
    %% 연결 관계 (오류 처리)
    UpdateTokenUsage --> RedisError
    RedisError -->|예| FallbackMode
    FallbackMode --> RecordMetrics
    RedisError -->|아니오| RecordMetrics
    
    CheckModelHealth --> CircuitBreaker
    CircuitBreaker -.-> ModelUnavailable
    
    %% 연결 관계 (모니터링)
    RecordMetrics -.-> PrometheusScrape
    PrometheusScrape -.-> AlertEvaluation
    AlertEvaluation -.-> NotificationSend
    
    %% 스타일링
    classDef startEnd fill:#e8f5e8,stroke:#2e7d32,stroke-width:3px
    classDef process fill:#e3f2fd,stroke:#1565c0,stroke-width:2px
    classDef decision fill:#fff3e0,stroke:#ef6c00,stroke-width:2px
    classDef error fill:#ffebee,stroke:#c62828,stroke-width:2px
    classDef success fill:#f1f8e9,stroke:#558b2f,stroke-width:2px
    classDef background fill:#f3e5f5,stroke:#7b1fa2,stroke-width:1px,stroke-dasharray: 5 5
    classDef monitoring fill:#fce4ec,stroke:#ad1457,stroke-width:1px,stroke-dasharray: 5 5
    
    class Start,End startEnd
    class ExtractInfo,IncrementConcurrent,GetModelEndpoint,ForwardRequest,ProcessingByModel,ExtractActualTokens,UpdateTokenUsage,RecordMetrics,DecrementConcurrentSuccess,LogSuccessfulRequest process
    class ValidateRequest,CheckConcurrent,CheckMinuteLimit,CheckHourLimit,CheckDayLimit,ModelFound,CheckModelHealth,ModelResponse,RedisError decision
    class InvalidRequest,ConcurrentLimitExceeded,MinuteLimitExceeded,HourLimitExceeded,DayLimitExceeded,ModelNotFound,ModelUnavailable,ModelError,DecrementConcurrent,LogRateLimit error
    class ReturnResponse success
    class ScheduledCleanup,HealthCheck,MetricCollection,FallbackMode,CircuitBreaker background
    class PrometheusScrape,AlertEvaluation,NotificationSend monitoring