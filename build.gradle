plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
artifact = 'simple-token-limiter'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // Redis
    implementation 'io.lettuce:lettuce-core'
    
    // Metrics - Prometheus 지원
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-core'
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Configuration
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:redis'
}

tasks.named('test') {
    useJUnitPlatform()
}

// JAR 설정
jar {
    enabled = false
}

bootJar {
    archiveFileName = "${project.name}-${project.version}.jar"
}

// 개발 환경 설정
bootRun {
    args = ['--spring.profiles.active=dev']
}

// Docker 빌드를 위한 태스크
task copyJar(type: Copy) {
    from 'build/libs'
    into 'docker'
    include '*.jar'
}

build.finalizedBy(copyJar)